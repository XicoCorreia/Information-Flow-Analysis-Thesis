1. If index is high, should store be high, what if for load? Both 
  R: Both should by High (Good idea to redo the information flow challenge SOS)
  declare array x : low ;
  x[h]=true; -> Shouldnt be allowed to used high idx
  l=x[true]; -> this is fine
  Using high as index reveals the secret
2. In the case a jump is inside a high context, for example jeq r3 == 6, do I make r3 high? 
  R: No but check it formally
3. Should I start with Inference rules/Type system or Interval Analysis?
  R: Inference Rules - How an instruction evolve and change the state of security level (Explain each) 
4. Go through Report and see where it should changed
  R: Everything 
--------------------------
1. When loading a value to a register we can also decrease the security value like a mov op?
R: Correct
--------------------------
How to work with ifs in the analysis?
R: Update both the registers used. Diff = identity
UnaryExp: The big endian and little endian change the byte order, how could I handle it?
R: Identity
--------------------------
Should I normalize the intervals before every operation?
R: There is no problem of too many normalization
Case for the division, what if the element can be 0?
R: Ignore it
Take a look at or/and, are the intervals correct?
R: Yes
What about XOR, I cant find any ideas of how to do it?
R: Do not invest to much on it, over aproximate it
Mod, show https://stackoverflow.com/questions/31057473/calculating-the-modulo-of-two-intervals.
R: Same as the above
Attacker model?
R: A paragraph in the introduction is enough for now atleast
--------------------------
Changes in judgment, remove Stmt?
R: Yeah
--------------------------
Memory being updated for the whole program, normal or should I change it?
R: 
